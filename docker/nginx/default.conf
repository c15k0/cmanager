user  nginx;
worker_processes  4;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # don't write to disk
    proxy_request_buffering off;

    # copies data between one FD and other from within the kernel
    # faster than read() + write()
    sendfile on;

    # send headers in one piece, it is better than sending them one by one
    tcp_nopush on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;

    # request timed out -- default 60
    client_body_timeout 300;

    # if client stop responding, free up memory -- default 60
    send_timeout 2;

    # server will close connection after this time -- default 75 -- maybe you prefer higher but I prefer lower
    # with CF doesn't matter much (does for paid plans)
    keepalive_timeout 40;

    # These are what we call a NGINX config directives that I'm too lazy to explain
    # here https://nginx.org/en/docs/
    sendfile_max_chunk 512k;
    server_tokens off;
    server_name_in_redirect off;

    client_max_body_size 300M;
    client_header_timeout 300;

    include /etc/nginx/gzip.conf;

    server {
        listen       80;
        listen  [::]:80;
        server_name  _;
        index index.php;

        root /var/www/public;

        server_tokens off;

        charset utf-8;

        # THREADING
        aio threads;
        directio 1m;

        # include configs
        include /etc/nginx/headers.conf;
        include /etc/nginx/cache.conf;
        include /etc/nginx/proxy.conf;

        # Block access to these locations
        location ~* /\.(?!well-known\/) {
            deny all;
        }

        location ~* (?:#.*#|\.(?:bak|conf|dist|fla|in[ci]|log|orig|psd|sh|sql|sw[op])|~)$ {
            deny all;
        }

        location / {
            try_files $uri $uri/ /index.php?$query_string;
            gzip_static on;

            # for OPTIONS return these headers and HTTP 200 status
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Methods "*";
                add_header Access-Control-Allow-Headers "*";
                add_header Access-Control-Allow-Origin "*";
                return 200;
            }
        }

        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; }

        # Error pages
        error_page  404 /index.php;
        error_page  500 502 503 504 /index.php;

        location ~ \.php$ {
            # Check that the PHP script exists before passing it
            try_files $fastcgi_script_name =404;
            include /etc/nginx/fastcgi.conf;
        }

    }
}
